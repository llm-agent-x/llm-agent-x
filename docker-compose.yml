services:
#  sandbox:
#    build:
#      context: ./sandbox
#    ports:
#      - "5000:5000"
#    volumes:
#      - ./sandbox:/app
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: 4G
#        reservations:
#          cpus: '0.5'
#          memory: 2G
  rabbitmq:
    image: "rabbitmq:3.13-management" # Use the official image with the management UI
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port for the services
      - "15672:15672" # Management UI port for you to inspect queues
    environment:
      # Default user/pass is guest/guest. You can set them here for production.
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The FastAPI + Socket.IO Gateway service

  gateway:
    build:
      context: .
      dockerfile: Dockerfile.python
      target: gateway
    container_name: gateway
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      # Set RELOAD to true for development in the override file
      - GATEWAY_RELOAD=false
    # <<< VOLUME IS REMOVED FROM HERE >>>
    depends_on:
      rabbitmq:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile.python
      target: worker
    container_name: worker
    environment:
      - RABBITMQ_HOST=rabbitmq
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
    # <<< VOLUME IS REMOVED FROM HERE >>>
    depends_on:
      rabbitmq:
        condition: service_healthy

  # The Next.js UI service
  ui:
    build:
      context: ./mission-control-ui
      # --- FIX: Simplified to just use the one correct Dockerfile ---
      dockerfile: Dockerfile
    container_name: ui
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - gateway